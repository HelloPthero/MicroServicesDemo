{
  "Routes": [ //16.x把ReRoutes更改成了Routes

    {
      "UseServiceDiscovery": true,
      "DownstreamPathTemplate": "/{url}",
      "DownstreamScheme": "http",
      "ServiceName": "Test2_Service",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "UpstreamPathTemplate": "/Test2/{url}",
      "UpstreamHttpMethod": [ "Get" ],
      "ReRoutesCaseSensitive": false,

      //polly start
      "FileCacheOptions": {
        "TtlSeconds": 15 //缓存时间(秒)
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3, //阈值 当转发到下游的服务连续出现的异常次数达到阈值就会触发熔断 必须和DurationOfBreak一起设置
        "DurationOfBreak": 10000, //熔断持续时间 毫秒
        "TimeoutValue": 1000 //限定时间内未相应的请求直接超时  (默认90秒)
      },
      "RateLimitOptions": {
        "ClientWhitelist": [], //客户端白名单 不受限流规则限制
        "EnableRateLimiting": true, //是否启用限流
        "Period": "10s", //周期    smhd
        "PeriodTimespan": 1, //多少秒后重试
        "Limit": 5 //周期内允许多少个请求             10s内超过1次报错  --API calls quota exceeded! maximum admitted 5 per 10s.
      }
      //polly end

    },
    {
      "UseServiceDiscovery": true,
      "DownstreamPathTemplate": "/{url}",
      "DownstreamScheme": "http",
      "ServiceName": "Test1_Service",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "UpstreamPathTemplate": "/Test1/{url}",
      "UpstreamHttpMethod": [ "Get" ],
      "ReRoutesCaseSensitive": false,

      //验证授权 start
      "AuthenticationOptions": { //对服务1进行授权验证 服务2不验证用于对照测试
        "AuthenticationProviderKey": "server1",
        "AllowedScopes": [ "gatewayScope" ] //ids4中的scope
      }
      //验证授权 end

    }
  ],
  "GlobalConfiguration": {
    //服务发现配置
    "ServiceDiscoveryProvider": {
      //注册中心Consul地址
      "Host": "localhost",
      //注册中心Consul端口号
      "Port": 8090,
      "Type": "Consul",
      //以毫秒为单位，告诉Ocelot多久调用一次Consul来更改服务配置。
      "PollingInterval": 100,
      //如果你有在Consul上配置key/value，则在这里输入配置key。
      "ConfigurationKey": "MyService_AB"
    }

  }
}
